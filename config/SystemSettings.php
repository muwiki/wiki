<?php
# This file was automatically generated by the MediaWiki 1.27alpha
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if (!defined('MEDIAWIKI')) {
    exit;
}

/** @var \Nette\Http\Request $httpRequest */

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = 'muwiki';
$wgMetaNamespace = 'Muwiki';

## Database settings
$wgDBtype = 'postgres';
$wgDBserver = getenv('MW_DB_SERVER') ?: '127.0.0.1';
$wgDBname = getenv('MW_DB_NAME');
$wgDBuser = getenv('MW_DB_USER');
$wgDBpassword = getenv('MW_DB_PASSWORD');

# Postgres specific settings
$wgDBport = getenv('MW_DB_PORT') ?: '5432';
$wgDBmwschema = getenv('MW_DB_SCHEMA') ?: 'public';

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## https://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = '';
$wgUsePathInfo = true;
$wgScriptExtension = '.php';

foreach (['view', 'edit', 'watch', 'unwatch', 'delete', 'revert', 'rollback', 'protect', 'unprotect', 'markpatrolled', 'render', 'submit', 'history', 'purge', 'info'] as $action) {
    $wgActionPaths[$action] = "/$action/$1";
}
$wgArticlePath = $wgActionPaths['view'];

## The protocol and server name to use in fully-qualified URLs
$wgServer = $httpRequest->getUrl()->getHostUrl();
$wgSecureLogin = $httpRequest->isSecured();

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo = "$wgResourceBasePath/resources/assets/logo_fi_transparent.png";

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = 'filip@prochazka.su';
$wgPasswordSender = 'system@muwiki.cz';

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
#$wgUseImageMagick = true;
#$wgImageMagickConvertCommand = "/usr/bin/convert";
#Not for Anonymous
$wgGroupPermissions['*']['upload'] = false;
$wgGroupPermissions['*']['reupload'] = false;
$wgGroupPermissions['*']['reupload-shared'] = false;
#Uploads (but not re-uploads) for Users
$wgGroupPermissions['user']['upload'] = true;
$wgGroupPermissions['user']['reupload'] = false;
$wgGroupPermissions['user']['reupload-shared'] = false;
#Sysops
$wgGroupPermissions['sysop']['upload'] = true;
$wgGroupPermissions['sysop']['reupload'] = true;
$wgGroupPermissions['sysop']['reupload-shared'] = true;

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = 'en_US.utf8';

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
$wgUseFileCache = true;
$wgFileCacheDirectory = __DIR__ . '/../cache';
$wgTmpDirectory = __DIR__ . '/../temp';

# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode = 'cs';

$wgSecretKey = false;

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = false;

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ''; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = 'https://creativecommons.org/licenses/by/4.0/';
$wgRightsText = 'Creative Commons Uveďte autora';
$wgRightsIcon = "$wgResourceBasePath/resources/assets/licenses/cc-by.png";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = '/usr/bin/diff3';

# Disable anonymouse edit
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['*']['createpage'] = false;
$wgGroupPermissions['*']['createtalk'] = false;

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = 'vector';

# End of automatically generated settings.
# Add more configuration options below.

$wgAllowExternalImagesFrom = [
    'https://s3.amazonaws.com/calc_thumbs/'
];

$wgUseETag = TRUE;
$wgUseGzip = FALSE;
$wgDisableCounters = true;

$wgJobRunRate = 0;


//wfLoadSkin('monobook');
wfLoadSkin($wgDefaultSkin);

$wgNamespacesWithSubpages = new InfiniteArray(TRUE, $wgNamespacesWithSubpages);
$wgRestrictDisplayTitle = false;

$wgGoogleAnalyticsAnonymizeIP = FALSE;
$wgGoogleAnalyticsIgnoreSpecials = [
    "Userlogin",
    "Userlogout",
    "Preferences",
    "ChangePassword"
];
wfLoadExtension('GoogleAnalytics');

wfLoadExtension('CustomStyleTags');

wfLoadExtension('MathJax');
wfLoadExtension('AddCustomFavicon');
wfLoadExtension('NetteMail');


$wgObjectCaches['apcu'] = ['class' => 'APCuBagOStuff'];
$wgMainCacheType = 'apcu';
//$wgParserCacheType = CACHE_ACCEL; # optional
$wgMessageCacheType = 'apcu'; # optional
//$wgMemCachedServers = array('127.0.0.1:11211');

$wgSessionsInObjectCache = true; # optional
$wgSessionCacheType = CACHE_DB; # optional
